"use client"

import { useState } from "react"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Checkbox } from "@/components/ui/checkbox"
import { Input } from "@/components/ui/input"
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"
import { Edit, Save } from 'lucide-react'

interface Product {
  id: string
  name: string
  category: string
  current: number
  reserve: number
  forecast: number
  recommended: number
  selected: boolean
}

const initialProducts: Product[] = [
  {
    id: "PROD-001",
    name: "Scratch Cards A",
    category: "Scratch Cards",
    current: 120,
    reserve: 50,
    forecast: 80,
    recommended: 10,
    selected: true,
  },
  {
    id: "PROD-002",
    name: "Scratch Cards B",
    category: "Scratch Cards",
    current: 45,
    reserve: 40,
    forecast: 60,
    recommended: 55,
    selected: true,
  },
  {
    id: "PROD-003",
    name: "Lottery Tickets",
    category: "Tickets",
    current: 60,
    reserve: 75,
    forecast: 90,
    recommended: 105,
    selected: true,
  },
  {
    id: "PROD-004",
    name: "Promotional Items",
    category: "Merchandise",
    current: 15,
    reserve: 30,
    forecast: 25,
    recommended: 40,
    selected: true,
  },
  {
    id: "PROD-005",
    name: "Gift Cards",
    category: "Cards",
    current: 25,
    reserve: 20,
    forecast: 15,
    recommended: 10,
    selected: false,
  },
  {
    id: "PROD-006",
    name: "Seasonal Cards",
    category: "Cards",
    current: 5,
    reserve: 25,
    forecast: 30,
    recommended: 50,
    selected: true,
  },
]

export function ForecastTable() {
  const [products, setProducts] = useState<Product[]>(initialProducts)
  const [editingId, setEditingId] = useState<string | null>(null)
  const [editValue, setEditValue] = useState<number>(0)

  const handleEdit = (id: string, recommended: number) => {
    setEditingId(id)
    setEditValue(recommended)
  }

  const handleSave = (id: string) => {
    setProducts(
      products.map((product) => {
        if (product.id === id) {
          return { ...product, recommended: editValue }
        }
        return product
      })
    )
    setEditingId(null)
  }

  const handleSelectChange = (id: string, checked: boolean) => {
    setProducts(
      products.map((product) => {
        if (product.id === id) {
          return { ...product, selected: checked }
        }
        return product
      })
    )
  }

  return (
    <div>
      <Table>
        <TableHeader>
          <TableRow>
            <TableHead className="w-12">
              <Checkbox />
            </TableHead>
            <TableHead>Product</TableHead>
            <TableHead>Current</TableHead>
            <TableHead>Reserve</TableHead>
            <TableHead>Forecast (14d)</TableHead>
            <TableHead>Recommended Order</TableHead>
            <TableHead className="text-right">Actions</TableHead>
          </TableRow>
        </TableHeader>
        <TableBody>
          {products.map((product) => (
            <TableRow key={product.id}>
              <TableCell>
                <Checkbox
                  checked={product.selected}
                  onCheckedChange={(checked) => handleSelectChange(product.id, checked as boolean)}
                />
              </TableCell>
              <TableCell>
                <div className="font-medium">{product.name}</div>
                <div className="text-xs text-muted-foreground">{product.category}</div>
              </TableCell>
              <TableCell>{product.current}</TableCell>
              <TableCell>{product.reserve}</TableCell>
              <TableCell>{product.forecast}</TableCell>
              <TableCell>
                {editingId === product.id ? (
                  <Input
                    type="number"
                    value={editValue}
                    onChange={(e) => setEditValue(parseInt(e.target.value))}
                    className="w-24"
                  />
                ) : (
                  <Badge
                    variant={product.recommended > 0 ? "default" : "outline"}
                    className="text-xs font-normal"
                  >
                    {product.recommended}
                  </Badge>
                )}
              </TableCell>
              <TableCell className="text-right">
                {editingId === product.id ? (
                  <Button size="sm" onClick={() => handleSave(product.id)}>
                    <Save className="mr-2 h-4 w-4" />
                    Save
                  </Button>
                ) : (
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => handleEdit(product.id, product.recommended)}
                  >
                    <Edit className="mr-2 h-4 w-4" />
                    Adjust
                  </Button>
                )}
              </TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
      
      <div className="mt-6 flex justify-end">
        <Button asChild>
          <a href="/orders">Generate Order Email</a>
        </Button>
      </div>
    </div>
  )
}
